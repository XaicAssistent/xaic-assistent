"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var calendarModule = require("nativescript-ui-calendar");
var Event_1 = require("../model/Event");
var Perido_1 = require("../model/Perido");
var color_1 = require("tns-core-modules/color/color");
var EventMapper = /** @class */ (function () {
    function EventMapper() {
    }
    EventMapper.eventstoCalendarEvent = function (events) {
        var eventsCalendar = [];
        var colors = [new color_1.Color(200, 188, 26, 214), new color_1.Color(220, 255, 109, 130), new color_1.Color(255, 55, 45, 255), new color_1.Color(199, 17, 227, 10), new color_1.Color(255, 255, 54, 3)];
        events.forEach(function (evento) {
            var startDate;
            var endDate;
            startDate = new Date(evento.fecha.getFullYear(), evento.fecha.getMonth(), evento.fecha.getDate());
            startDate.setHours(evento.periodo.empiezaHora);
            startDate.setMinutes(evento.periodo.empiezaMinuto);
            endDate = new Date(evento.fecha.getFullYear(), evento.fecha.getMonth(), evento.fecha.getDate());
            endDate.setHours(evento.periodo.acabaHora);
            endDate.setMinutes(evento.periodo.acabaMinuto);
            var event = new calendarModule.CalendarEvent(evento.titulo, startDate, endDate, false, colors[Math.floor(Math.random() * (colors.length - 0 + 1)) + 0]);
            eventsCalendar.push(event);
        });
        return eventsCalendar;
    };
    EventMapper.eventsJSONtoEvent = function (eventsJSON) {
        var events = [];
        eventsJSON["events"].forEach(function (eve) {
            //faltara posar els users
            var evento = new Event_1.Event();
            evento.idEvento = eve.IdEvento;
            evento.titulo = eve.Titulo;
            evento.descripcion = eve.Descripcion;
            var fechaSpliteada = eve.Fecha.split("T", 1)[0].split("-", 3);
            var fecha = new Date(fechaSpliteada[0], fechaSpliteada[1] - 1, fechaSpliteada[2]);
            evento.fecha = fecha;
            var periodo = new Perido_1.Periodo();
            var horasMinutosEmpieza = eve.Empieza.split("T", 2)[1].split(":", 2);
            var horasMinutosAcaba = eve.Acaba.split("T", 2)[1].split(":", 2);
            periodo.empiezaHora = horasMinutosEmpieza[0];
            periodo.empiezaMinuto = horasMinutosEmpieza[1];
            periodo.acabaHora = horasMinutosAcaba[0];
            periodo.acabaMinuto = horasMinutosAcaba[1];
            evento.periodo = periodo;
            evento.motivoCancelacion = eve.MotivoCancelacion;
            evento.estado.idEstado = eve.Estado;
            if (eve.IdUserEmpresa) {
                evento.userEmpresa.idUserEmprea = eve.IdUserEmpresa;
            }
            events.push(evento);
        });
        return events;
    };
    return EventMapper;
}());
exports.EventMapper = EventMapper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRNYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFdmVudE1hcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlEQUEyRDtBQUMzRCx3Q0FBdUM7QUFDdkMsMENBQTBDO0FBQzFDLHNEQUFxRDtBQUVyRDtJQUFBO0lBa0VBLENBQUM7SUFqRWlCLGlDQUFxQixHQUFuQyxVQUFvQyxNQUFlO1FBQy9DLElBQUksY0FBYyxHQUFHLEVBQUUsQ0FBQztRQUN4QixJQUFJLE1BQU0sR0FBRyxDQUFDLElBQUksYUFBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksYUFBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksYUFBSyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksYUFBSyxDQUFDLEdBQUcsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksYUFBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFakssTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFBLE1BQU07WUFDakIsSUFBSSxTQUFlLENBQUM7WUFDcEIsSUFBSSxPQUFhLENBQUM7WUFFbEIsU0FBUyxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7WUFDbEcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQy9DLFNBQVMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxh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QUFNLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFFcEMsSUFBRyxHQUFHLENBQUMsYUFBYSxFQUFDO2dCQUNqQixNQUFNLENBQUMsV0FBVyxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDO2FBQ3ZEO1lBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxrQkFBQztBQUFELENBQUMsQUFsRUQsSUFrRUM7QUFsRVksa0NBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjYWxlbmRhck1vZHVsZSBmcm9tIFwibmF0aXZlc2NyaXB0LXVpLWNhbGVuZGFyXCI7XG5pbXBvcnQgeyBFdmVudCB9IGZyb20gXCIuLi9tb2RlbC9FdmVudFwiO1xuaW1wb3J0IHsgUGVyaW9kbyB9IGZyb20gXCIuLi9tb2RlbC9QZXJpZG9cIjtcbmltcG9ydCB7IENvbG9yIH0gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvY29sb3IvY29sb3JcIjtcblxuZXhwb3J0IGNsYXNzIEV2ZW50TWFwcGVyIHtcbiAgICBwdWJsaWMgc3RhdGljIGV2ZW50c3RvQ2FsZW5kYXJFdmVudChldmVudHM6IEV2ZW50W10pIDogY2FsZW5kYXJNb2R1bGUuQ2FsZW5kYXJFdmVudFtde1xuICAgICAgICBsZXQgZXZlbnRzQ2FsZW5kYXIgPSBbXTtcbiAgICAgICAgbGV0IGNvbG9ycyA9IFtuZXcgQ29sb3IoMjAwLCAxODgsIDI2LCAyMTQpLCBuZXcgQ29sb3IoMjIwLCAyNTUsIDEwOSwgMTMwKSwgbmV3IENvbG9yKDI1NSwgNTUsIDQ1LCAyNTUpLCBuZXcgQ29sb3IoMTk5LCAxNywgMjI3LCAxMCksIG5ldyBDb2xvcigyNTUsIDI1NSwgNTQsIDMpXTtcblxuICAgICAgICBldmVudHMuZm9yRWFjaChldmVudG8gPT4ge1xuICAgICAgICAgICAgbGV0IHN0YXJ0RGF0ZTogRGF0ZTtcbiAgICAgICAgICAgIGxldCBlbmREYXRlOiBEYXRlO1xuXG4gICAgICAgICAgICBzdGFydERhdGUgPSBuZXcgRGF0ZShldmVudG8uZmVjaGEuZ2V0RnVsbFllYXIoKSwgZXZlbnRvLmZlY2hhLmdldE1vbnRoKCksIGV2ZW50by5mZWNoYS5nZXREYXRlKCkpO1xuICAgICAgICAgICAgc3RhcnREYXRlLnNldEhvdXJzKGV2ZW50by5wZXJpb2RvLmVtcGllemFIb3JhKTtcbiAgICAgICAgICAgIHN0YXJ0RGF0ZS5zZXRNaW51dGVzKGV2ZW50by5wZXJpb2RvLmVtcGllemFNaW51dG8pO1xuXG4gICAgICAgICAgICBlbmREYXRlID0gbmV3IERhdGUoZXZlbnRvLmZlY2hhLmdldEZ1bGxZZWFyKCksIGV2ZW50by5mZWNoYS5nZXRNb250aCgpLCBldmVudG8uZmVjaGEuZ2V0RGF0ZSgpKTtcbiAgICAgICAgICAgIGVuZERhdGUuc2V0SG91cnMoZXZlbnRvLnBlcmlvZG8uYWNhYmFIb3JhKTtcbiAgICAgICAgICAgIGVuZERhdGUuc2V0TWludXRlcyhldmVudG8ucGVyaW9kby5hY2FiYU1pbnV0byk7XG5cbiAgICAgICAgICAgIGxldCBldmVudCA9IG5ldyBjYWxlbmRhck1vZHVsZS5DYWxlbmRhckV2ZW50KGV2ZW50by50aXR1bG8sIHN0YXJ0RGF0ZSwgZW5kRGF0ZSwgZmFsc2UsIGNvbG9yc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoY29sb3JzLmxlbmd0aCAtIDAgKyAxKSkgKyAwXSk7XG5cbiAgICAgICAgICAgIGV2ZW50c0NhbGVuZGFyLnB1c2goZXZlbnQpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZXZlbnRzQ2FsZW5kYXI7XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBldmVudHNKU09OdG9FdmVudChldmVudHNKU09OKSA6IEV2ZW50W117XG4gICAgICAgIGxldCBldmVudHM6IEV2ZW50W10gPSBbXTtcblxuICAgICAgICBldmVudHNKU09OW1wiZXZlbnRzXCJdLmZvckVhY2goKGV2ZSkgPT4ge1xuICAgICAgICAgICAgLy9mYWx0YXJhIHBvc2FyIGVscyB1c2Vyc1xuICAgICAgICAgICAgbGV0IGV2ZW50bzogRXZlbnQgPSBuZXcgRXZlbnQoKTtcbiAgICAgICAgICAgIGV2ZW50by5pZEV2ZW50byA9IGV2ZS5JZEV2ZW50bztcbiAgICAgICAgICAgIGV2ZW50by50aXR1bG8gPSBldmUuVGl0dWxvO1xuICAgICAgICAgICAgZXZlbnRvLmRlc2NyaXBjaW9uID0gZXZlLkRlc2NyaXBjaW9uO1xuXG4gICAgICAgICAgICBsZXQgZmVjaGFTcGxpdGVhZGEgPSBldmUuRmVjaGEuc3BsaXQoXCJUXCIsIDEpWzBdLnNwbGl0KFwiLVwiLCAzKTtcbiAgICAgICAgICAgIGxldCBmZWNoYTogRGF0ZSA9ICBuZXcgRGF0ZShmZWNoYVNwbGl0ZWFkYVswXSwgZmVjaGFTcGxpdGVhZGFbMV0gLSAxLCBmZWNoYVNwbGl0ZWFkYVsyXSk7XG5cbiAgICAgICAgICAgIGV2ZW50by5mZWNoYSA9IGZlY2hhO1xuXG4gICAgICAgICAgICBsZXQgcGVyaW9kbzpQZXJpb2RvID0gbmV3IFBlcmlvZG8oKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGV0IGhvcmFzTWludXRvc0VtcGllemEgPSBldmUuRW1waWV6YS5zcGxpdChcIlRcIiwgMilbMV0uc3BsaXQoXCI6XCIsIDIpO1xuICAgICAgICAgICAgbGV0IGhvcmFzTWludXRvc0FjYWJhID0gZXZlLkFjYWJhLnNwbGl0KFwiVFwiLCAyKVsxXS5zcGxpdChcIjpcIiwgMik7XG5cbiAgICAgICAgICAgIHBlcmlvZG8uZW1waWV6YUhvcmEgPSBob3Jhc01pbnV0b3NFbXBpZXphWzBdO1xuICAgICAgICAgICAgcGVyaW9kby5lbXBpZXphTWludXRvID0gaG9yYXNNaW51dG9zRW1waWV6YVsxXTtcblxuICAgICAgICAgICAgcGVyaW9kby5hY2FiYUhvcmEgPSBob3Jhc01pbnV0b3NBY2FiYVswXTtcbiAgICAgICAgICAgIHBlcmlvZG8uYWNhYmFNaW51dG8gPSBob3Jhc01pbnV0b3NBY2FiYVsxXTtcblxuICAgICAgICAgICAgZXZlbnRvLnBlcmlvZG8gPSBwZXJpb2RvO1xuXG4gICAgICAgICAgICBldmVudG8ubW90aXZvQ2FuY2VsYWNpb24gPSBldmUuTW90aXZvQ2FuY2VsYWNpb247XG5cbiAgICAgICAgICAgIGV2ZW50by5lc3RhZG8uaWRFc3RhZG8gPSBldmUuRXN0YWRvO1xuXG4gICAgICAgICAgICBpZihldmUuSWRVc2VyRW1wcmVzYSl7XG4gICAgICAgICAgICAgICAgZXZlbnRvLnVzZXJFbXByZXNhLmlkVXNlckVtcHJlYSA9IGV2ZS5JZFVzZXJFbXByZXNhO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBldmVudHMucHVzaChldmVudG8pO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gZXZlbnRzO1xuICAgIH1cbn0iXX0=