"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var calendarModule = require("nativescript-ui-calendar");
var Event_1 = require("../model/Event");
var Perido_1 = require("../model/Perido");
var color_1 = require("tns-core-modules/color/color");
var EventMapper = /** @class */ (function () {
    function EventMapper() {
    }
    EventMapper.eventstoCalendarEvent = function (events) {
        var eventsCalendar = [];
        var colors = [new color_1.Color(200, 188, 26, 214), new color_1.Color(220, 255, 109, 130), new color_1.Color(255, 55, 45, 255), new color_1.Color(199, 17, 227, 10), new color_1.Color(255, 255, 54, 3)];
        events.forEach(function (evento) {
            var startDate;
            var endDate;
            startDate = new Date(evento.fecha.getFullYear(), evento.fecha.getMonth(), evento.fecha.getDate());
            startDate.setHours(evento.periodo.empiezaHora);
            startDate.setMinutes(evento.periodo.empiezaMinuto);
            endDate = new Date(evento.fecha.getFullYear(), evento.fecha.getMonth(), evento.fecha.getDate());
            endDate.setHours(evento.periodo.acabaHora);
            endDate.setMinutes(evento.periodo.acabaMinuto);
            var event = new calendarModule.CalendarEvent(evento.titulo, startDate, endDate, false, colors[Math.floor(Math.random() * (colors.length - 0 + 1)) + 0]);
            eventsCalendar.push(event);
        });
        return eventsCalendar;
    };
    EventMapper.eventsJSONtoEvent = function (eventsJSON) {
        var events = [];
        eventsJSON["events"].forEach(function (eve) {
            //faltara posar els users
            var evento = new Event_1.Event();
            evento.idEvento = eve.IdEvento;
            evento.titulo = eve.Titulo;
            evento.descripcion = eve.Descripcion;
            var fechaSpliteada = eve.Fecha.split("T", 1)[0].split("-", 3);
            var fecha = new Date(fechaSpliteada[0], fechaSpliteada[1] - 1, fechaSpliteada[2]);
            evento.fecha = fecha;
            var periodo = new Perido_1.Periodo();
            var horasMinutosEmpieza = eve.Empieza.split("T", 2)[1].split(":", 2);
            var horasMinutosAcaba = eve.Acaba.split("T", 2)[1].split(":", 2);
            periodo.empiezaHora = horasMinutosEmpieza[0];
            periodo.empiezaMinuto = horasMinutosEmpieza[1];
            periodo.acabaHora = horasMinutosAcaba[0];
            periodo.acabaMinuto = horasMinutosAcaba[1];
            evento.periodo = periodo;
            evento.motivoCancelacion = eve.MotivoCancelacion;
            evento.estado.idEstado = eve.Estado;
            if (eve.IdUserEmpresa) {
                evento.userEmpresa.idUserEmprea = eve.IdUserEmpresa;
            }
            events.push(evento);
        });
        return events;
    };
    EventMapper.infoEventJSONtoEvent = function (infoEventJSON) {
        var evento = new Event_1.Event();
        var eve = infoEventJSON['evento'];
        evento.idEvento = eve.IdEvento;
        evento.titulo = eve.Titulo;
        evento.descripcion = eve.Descripcion;
        var fechaSpliteada = eve.Fecha.split("T", 1)[0].split("-", 3);
        var fecha = new Date(fechaSpliteada[0], fechaSpliteada[1] - 1, fechaSpliteada[2]);
        evento.fecha = fecha;
        var periodo = new Perido_1.Periodo();
        var horasMinutosEmpieza = eve.Empieza.split("T", 2)[1].split(":", 2);
        var horasMinutosAcaba = eve.Acaba.split("T", 2)[1].split(":", 2);
        periodo.empiezaHora = horasMinutosEmpieza[0];
        periodo.empiezaMinuto = horasMinutosEmpieza[1];
        periodo.acabaHora = horasMinutosAcaba[0];
        periodo.acabaMinuto = horasMinutosAcaba[1];
        evento.periodo = periodo;
        evento.motivoCancelacion = eve.MotivoCancelacion;
        evento.estado.idEstado = infoEventJSON['estado'].IdEstado;
        evento.estado.codigo = infoEventJSON['estado'].Codigo;
        evento.estado.descripcion = infoEventJSON['estado'].Descripcion;
        if (infoEventJSON['userEmpresa']) {
            var user = infoEventJSON['userEmpresa'];
            evento.userEmpresa.idUserEmprea = user["UserEmpresa.IdUserEmpresa"];
            evento.userEmpresa.idUser = user.IdUser;
            evento.userEmpresa.nombre = user.Nombre;
            evento.userEmpresa.apellidos = user.Apellidos;
            evento.userEmpresa.telefono = user.Telefono;
            evento.userEmpresa.apellidos = user.Apellidos;
            evento.userEmpresa.foto = user.Foto;
            evento.userEmpresa.category.nombre = user["Category.nombre"];
            evento.userEmpresa.direccionFija = user["UserEmpresa.drireccion_fija"];
        }
        evento.location = eve.Direccion;
        return evento;
    };
    return EventMapper;
}());
exports.EventMapper = EventMapper;
//# sourceMappingURL=data:application/json;base64,